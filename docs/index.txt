Welcome to django_block_comment's documentation!
================================================

This app is meant to be the simplest drop-in solution for providing block-level
commenting capabliities on arbitrary chunks of marked-up text.

It was inspired in part by `The Django Book`_, and partly by the real-world
need for more specific feedback mechanisms on technical writeups, proposals
and documents on the Web.

Existing solutions relied on the content author fully understanding the
mechanism, and were far from plug-and-play. This app attempts to solve both
of those issues.

.. _The Django Book: http://djangobook.com/

Requirements
------------

The ``block_comments`` app requires:

  * Django 1.3+.
  * jQuery 1.5+.

Quickstart
----------

Important notes:

  #. Add ``block_comment`` to your ``INSTALLED_APPS``.
  #. Add ``COMMENTS_APP = "block_comment"`` to your ``settings.py`` file.
  #. Include ``'block_comment.urls'`` somewhere in your URLconf.
  #. Run ``manage.py syncdb`` (or ``manage.py migrate`` if you use South).
  #. Create a model that uses ``block_comments.fields.BlockCommentField``.
  #. Include ``block_comment.css`` and ``block_comment.js`` in your template.
  #. In your template add ``{% load comments %}``, and use the provided
     ``{% comment_form_target %}`` template tag to specify your comment
     form's ``action`` attribute.
  #. Initialize the HTML element you wish to make block-commentable using the
     included jQuery plugin like so:

    .. code-block:: javascript

        $("#my_commentable_element").block_comment()

That should get you going with a basic interface for block-level commenting
on any arbitrary text.

.. toctree::
   :maxdepth: 2
